name: Check Broken Links in help pages

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  test_mode: false
  create_issues: true
  max_test_issues: 5
  DOMAIN_TO_FILTER: ico.org.uk

on:
  schedule:
    - cron: "30 21 * * MON"
  workflow_dispatch:
    inputs:
      testMode:
        type: boolean
        description: Run in test mode (only logs results without creating issues)?
        default: true
      createIssues:
        type: boolean
        description: Create issues for broken links (ignored in test mode)?
        default: false
      maxIssues:
        type: number
        description: Max number of issues to create (test mode only)?
        default: 1

jobs:
  check-links:
    name: Check for Broken Links in ERB files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          sudo apt-get update && sudo apt-get install -y xmlstarlet python3-pip
          pip3 install rapidfuzz lxml jq

      - name: Determine workflow inputs
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "test_mode=${{ github.event.inputs.testMode }}" >> $GITHUB_ENV
          echo "create_issues=${{ github.event.inputs.createIssues }}" >> $GITHUB_ENV
          echo "max_test_issues=${{ github.event.inputs.maxIssues }}" >> $GITHUB_ENV

      - name: Restore lychee cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: .lycheecache
          key: cache-lychee-broken-links-${{ hashFiles('.lycheeignore', '.github/workflows/broken-link-checker.yml') }}
          restore-keys: cache-lychee-

      - name: Define ignored files
        run: |
          echo "lib/views/public_body/_more_info.html.erb" > .lycheeignore
          echo "lib/views/general/_frontpage_videos.html.erb" >> .lycheeignore

      - name: Precompute ERB files
        run: |
          find lib/views -name '*.erb' | grep -v -f .lycheeignore > .erb-files-list

      - name: Run Lychee to Check Links
        uses: lycheeverse/lychee-action@v2.2.0
        with:
          args: "--cache --max-cache-age 1d --cache-exclude-status '429, 500..502' --quiet --no-progress --user-agent '${{ github.repository }} (lychee)' --exclude-path .lycheeignore --suggest --verbose"
          output: lychee_report.json
          format: json
          fail: false

      - name: Process Lychee Output
        run: |
          if [ -s lychee_report.json ] && [ "$(jq -r '.error_map' lychee_report.json)" != "{}" ]; then
            echo "Processing Lychee report..."
            jq -r '
              . as $root
              | [ $root.error_map
                  | to_entries[]
                  | select(.value != null)
                  | { file: .key, errors: .value }
                ]
              | map(
                  ( .errors // [] )[] | { file: .file, url: .url, status: .status }
                )
              | group_by(.url)
              | map({
                  url: .[0].url,
                  status: .[0].status,
                  files: (map(.file) | unique | sort),
                  suggestions: (
                    .[0].url as $url
                    | (map(.file) | unique)
                      | map( ($root.suggestion_map[.] // [])
                          | map(select(.original == $url) | .suggestion)
                        )
                      | flatten
                      | unique
                  )
                })
            ' lychee_report.json > reformatted_broken_links.json

            echo "Processed results saved to reformatted_broken_links.json"
          else
            echo "No broken links detected."
            echo "[]" > reformatted_broken_links.json
          fi

      - name: Upload Broken Links Report
        uses: actions/upload-artifact@v4
        with:
          name: broken-links
          path: |
            reformatted_broken_links.json
            lychee_report.json
          retention-days: 7

      - name: Save updated lychee cache
        uses: actions/cache/save@v4
        with:
          path: .lycheecache
          key: cache-lychee-broken-links
